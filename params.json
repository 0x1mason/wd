{"name":"WD.js","tagline":"node.js webdriver/selenium 2 client","body":"# WD.js -- WebDriver/Selenium 2 for node.js\r\n\r\n[![Build Status](https://secure.travis-ci.org/admc/wd.png?branch=master)](http://travis-ci.org/admc/wd)\r\n[![Selenium Test Status](https://saucelabs.com/buildstatus/wdjs)](https://saucelabs.com/u/wdjs)\r\n\r\n## Update node to latest\r\n\r\nhttp://nodejs.org/#download\r\n\r\n## Install\r\n\r\n<pre>\r\nnpm install wd\r\n</pre>\r\n\r\n## Authors\r\n\r\n  - Adam Christian ([admc](http://github.com/admc))\r\n  - Ruben Daniels ([javruben](https://github.com/javruben))\r\n  - Peter Braden ([peterbraden](https://github.com/peterbraden))\r\n  - Seb Vincent ([sebv](https://github.com/sebv))\r\n  - Peter 'Pita' Martischka ([pita](https://github.com/Pita))\r\n  - Jonathan Lipps ([jlipps](https://github.com/jlipps))\r\n  - Phil Sarin ([pdsarin](https://github.com/pdsarin))\r\n  - Mathieu Sabourin ([OniOni](https://github.com/OniOni))\r\n  - Bjorn Tipling ([btipling](https://github.com/btipling))\r\n  - Santiago Suarez Ordonez ([santiycr](https://github.com/santiycr))\r\n  - Bernard Kobos ([bernii](https://github.com/bernii))\r\n  - Jason Carr ([maudineormsby](https://github.com/maudineormsby))\r\n\r\n## License\r\n\r\n  * License - Apache 2: http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n## Usage\r\n\r\n<pre>\r\n): wd shell\r\n> x = wd.remote() or wd.remote(\"ondemand.saucelabs.com\", 80, \"username\", \"apikey\")\r\n\r\n> x.init() or x.init({desired capabilities ovveride})\r\n> x.get(\"http://www.url.com\")\r\n> x.eval(\"window.location.href\", function(e, o) { console.log(o) })\r\n> x.quit()\r\n</pre>\r\n\r\n\r\n## Writing a test!\r\n\r\n<pre>\r\nvar webdriver = require('wd')\r\n  , assert = require('assert');\r\n\r\nvar browser = webdriver.remote();\r\n\r\nbrowser.on('status', function(info){\r\n  console.log('\\x1b[36m%s\\x1b[0m', info);\r\n});\r\nbrowser.on('command', function(meth, path){\r\n  console.log(' > \\x1b[33m%s\\x1b[0m: %s', meth, path);\r\n});\r\n\r\ndesired = {\r\n  browserName:'chrome'\r\n  , tags: [\"examples\"]\r\n  , name: \"This is an example test\"\r\n};\r\n\r\nbrowser.init(desired, function() {\r\n  browser.get(\"http://admc.io/wd/test-pages/guinea-pig.html\", function() {\r\n    browser.title(function(err, title) {\r\n      assert.ok(~title.indexOf('I am a page title - Sauce Labs'), 'Wrong title!');\r\n      browser.elementById('i am a link', function(err, el) {\r\n        browser.clickElement(el, function() {\r\n          browser.eval(\"window.location.href\", function(err, location) {\r\n            assert.ok(~location.indexOf('guinea-pig2'));\r\n            browser.quit();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n});\r\n</pre>\r\n\r\n## Promises Api\r\n\r\nA promise api using [q](https://github.com/kriskowal/q) is\r\navailable. Code sample is\r\n[here](https://github.com/admc/wd/blob/master/examples/example.promise.chrome.js).\r\n\r\n## Chain Api\r\n\r\nA chain api is also available. Code sample is [here](https://github.com/admc/wd/blob/master/examples/example.chain.chrome.js).\r\n\r\n## Supported Methods\r\n\r\n<table class=\"wikitable\">\r\n<tbody>\r\n<tr>\r\n<td width=\"50%\" style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<strong>JsonWireProtocol</strong>\r\n</td>\r\n<td width=\"50%\" style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<strong>wd</strong>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/status\">/status</a><br>\r\nQuery the server's current status.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nstatus(cb) -&gt; cb(err, status)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session\">/session</a><br>\r\nCreate a new session.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ninit(desired, cb) -&gt; cb(err, sessionID)<br>\r\nInitialize the browser.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/sessions\">/sessions</a><br>\r\nReturns a list of the currently active sessions.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nsessions(cb) -&gt; cb(err, sessions)<br>\r\n</p>\r\n<p>\r\n## Alternate strategy to get session capabilities from server session list<br>\r\naltSessionCapabilities(cb) -&gt; cb(err, capabilities)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId\">/session/:sessionId</a><br>\r\nRetrieve the capabilities of the specified session.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsessionCapabilities(cb) -&gt; cb(err, capabilities)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nDELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId\">/session/:sessionId</a><br>\r\nDelete the session.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nquit(cb) -&gt; cb(err)<br>\r\nDestroy the browser.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts\">/session/:sessionId/timeouts</a><br>\r\nConfigure the amount of time that a particular type of operation can execute for before they are aborted and a |Timeout| error is returned to the client.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsetPageLoadTimeout(ms, cb) -&gt; cb(err)<br>\r\n(use setImplicitWaitTimeout and setAsyncScriptTimeout to set the other timeouts)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts/async_script\">/session/:sessionId/timeouts/async_script</a><br>\r\nSet the amount of time, in milliseconds, that asynchronous scripts executed by /session/:sessionId/execute_async are permitted to run before they are aborted and a |Timeout| error is returned to the client.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsetAsyncScriptTimeout(ms, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/timeouts/implicit_wait\">/session/:sessionId/timeouts/implicit_wait</a><br>\r\nSet the amount of time the driver should wait when searching for elements.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsetImplicitWaitTimeout(ms, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/window_handle\">/session/:sessionId/window_handle</a><br>\r\nRetrieve the current window handle.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwindowHandle(cb) -&gt; cb(err, handle)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/window_handles\">/session/:sessionId/window_handles</a><br>\r\nRetrieve the list of all window handles available to the session.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwindowHandles(cb) -&gt; cb(err, arrayOfHandles)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/url\">/session/:sessionId/url</a><br>\r\nRetrieve the URL of the current page.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nurl(cb) -&gt; cb(err, url)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/url\">/session/:sessionId/url</a><br>\r\nNavigate to a new URL.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nget(url,cb) -&gt; cb(err)<br>\r\nGet a new url.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/forward\">/session/:sessionId/forward</a><br>\r\nNavigate forwards in the browser history, if possible.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nforward(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/back\">/session/:sessionId/back</a><br>\r\nNavigate backwards in the browser history, if possible.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nback(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/refresh\">/session/:sessionId/refresh</a><br>\r\nRefresh the current page.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nrefresh(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/execute\">/session/:sessionId/execute</a><br>\r\nInject a snippet of JavaScript into the page for execution in the context of the currently selected frame.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nexecute(code, args, cb) -&gt; cb(err, result)<br>\r\nexecute(code, cb) -&gt; cb(err, result)<br>\r\nargs: script argument array (optional)<br>\r\n</p>\r\n<p>\r\nExecute script using eval(code):<br>\r\nsafeExecute(code, args, cb) -&gt; cb(err, result)<br>\r\nsafeExecute(code, cb) -&gt; cb(err, result)<br>\r\nargs: script argument array (optional)<br>\r\n</p>\r\n<p>\r\nEvaluate expression (using execute):<br>\r\neval(code, cb) -&gt; cb(err, value)<br>\r\n</p>\r\n<p>\r\nEvaluate expression (using safeExecute):<br>\r\nsafeEval(code, cb) -&gt; cb(err, value)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/execute_async\">/session/:sessionId/execute_async</a><br>\r\nInject a snippet of JavaScript into the page for execution in the context of the currently selected frame.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nexecuteAsync(code, args, cb) -&gt; cb(err, result)<br>\r\nexecuteAsync(code, cb) -&gt; cb(err, result)<br>\r\nargs: script argument array (optional)<br>\r\n</p>\r\n<p>\r\nExecute async script using eval(code):<br>\r\nsafeExecuteAsync(code, args, cb) -&gt; cb(err, result)<br>\r\nsafeExecuteAsync(code, cb) -&gt; cb(err, result)<br>\r\nargs: script argument array (optional)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/screenshot\">/session/:sessionId/screenshot</a><br>\r\nTake a screenshot of the current page.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ntakeScreenshot(cb) -&gt; cb(err, screenshot)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/frame\">/session/:sessionId/frame</a><br>\r\nChange focus to another frame on the page.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nframe(frameRef, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/window\">/session/:sessionId/window</a><br>\r\nChange focus to another window.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwindow(name, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nDELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/window\">/session/:sessionId/window</a><br>\r\nClose the current window.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nclose(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/window/:windowHandle/size\">/session/:sessionId/window/:windowHandle/size</a><br>\r\nChange the size of the specified window.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nwindowSize(handle, width, height, cb) -&gt; cb(err)<br>\r\n</p>\r\n<p>\r\nsetWindowSize(width, height, handle, cb) -&gt; cb(err)<br>\r\nsetWindowSize(width, height, cb) -&gt; cb(err)<br>\r\nwidth: width in pixels to set size to<br>\r\nheight: height in pixels to set size to<br>\r\nhandle: window handle to set size for (optional, default: 'current')<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/window/:windowHandle/size\">/session/:sessionId/window/:windowHandle/size</a><br>\r\nGet the size of the specified window.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ngetWindowSize(handle, cb) -&gt; cb(err, size)<br>\r\ngetWindowSize(cb) -&gt; cb(err, size)<br>\r\nhandle: window handle to get size (optional, default: 'current')<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/window/:windowHandle/maximize\">/session/:sessionId/window/:windowHandle/maximize</a><br>\r\nMaximize the specified window if not already maximized.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nmaximize(handle, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\r\nRetrieve all cookies visible to the current page.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nallCookies() -&gt; cb(err, cookies)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\r\nSet a cookie.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsetCookie(cookie, cb) -&gt; cb(err)<br>\r\ncookie example:<br>\r\n{name:'fruit', value:'apple'}<br>\r\n## Optional cookie fields<br>\r\npath, domain, secure, expiry<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nDELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/cookie\">/session/:sessionId/cookie</a><br>\r\nDelete all cookies visible to the current page.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ndeleteAllCookies(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nDELETE <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#DELETE_/session/:sessionId/cookie/:name\">/session/:sessionId/cookie/:name</a><br>\r\nDelete the cookie with the given name.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ndeleteCookie(name, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/source\">/session/:sessionId/source</a><br>\r\nGet the current page source.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsource(cb) -&gt; cb(err, source)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/title\">/session/:sessionId/title</a><br>\r\nGet the current page title.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ntitle(cb) -&gt; cb(err, title)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element\">/session/:sessionId/element</a><br>\r\nSearch for an element on the page, starting from the document root.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nelement(using, value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n<p>\r\nelementByClassName(value, cb) -&gt; cb(err, element)<br>\r\nelementByCssSelector(value, cb) -&gt; cb(err, element)<br>\r\nelementById(value, cb) -&gt; cb(err, element)<br>\r\nelementByName(value, cb) -&gt; cb(err, element)<br>\r\nelementByLinkText(value, cb) -&gt; cb(err, element)<br>\r\nelementByPartialLinkText(value, cb) -&gt; cb(err, element)<br>\r\nelementByTagName(value, cb) -&gt; cb(err, element)<br>\r\nelementByXPath(value, cb) -&gt; cb(err, element)<br>\r\nelementByCss(value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/elements\">/session/:sessionId/elements</a><br>\r\nSearch for multiple elements on the page, starting from the document root.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nelements(using, value, cb) -&gt; cb(err, elements)<br>\r\n</p>\r\n<p>\r\nelementsByClassName(value, cb) -&gt; cb(err, elements)<br>\r\nelementsByCssSelector(value, cb) -&gt; cb(err, elements)<br>\r\nelementsById(value, cb) -&gt; cb(err, elements)<br>\r\nelementsByName(value, cb) -&gt; cb(err, elements)<br>\r\nelementsByLinkText(value, cb) -&gt; cb(err, elements)<br>\r\nelementsByPartialLinkText(value, cb) -&gt; cb(err, elements)<br>\r\nelementsByTagName(value, cb) -&gt; cb(err, elements)<br>\r\nelementsByXPath(value, cb) -&gt; cb(err, elements)<br>\r\nelementsByCss(value, cb) -&gt; cb(err, elements)<br>\r\n</p>\r\n<p>\r\n## Retrieve an element avoiding not found exception and returning null instead<br>\r\nelementOrNull(using, value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n<p>\r\nelementByClassNameOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByCssSelectorOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByIdOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByNameOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByLinkTextOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByPartialLinkTextOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByTagNameOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByXPathOrNull(value, cb) -&gt; cb(err, element)<br>\r\nelementByCssOrNull(value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n<p>\r\n## Retrieve an element avoiding not found exception and returning undefined instead<br>\r\nelementIfExists(using, value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n<p>\r\nelementByClassNameIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByCssSelectorIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByIdIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByNameIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByLinkTextIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByPartialLinkTextIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByTagNameIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByXPathIfExists(value, cb) -&gt; cb(err, element)<br>\r\nelementByCssIfExists(value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n<p>\r\n## Check if element exists<br>\r\nhasElement(using, value, cb) -&gt; cb(err, boolean)<br>\r\n</p>\r\n<p>\r\nhasElementByClassName(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementByCssSelector(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementById(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementByName(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementByLinkText(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementByPartialLinkText(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementByTagName(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementByXPath(value, cb) -&gt; cb(err, boolean)<br>\r\nhasElementByCss(value, cb) -&gt; cb(err, boolean)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/active\">/session/:sessionId/element/active</a><br>\r\nGet the element on the page that currently has focus.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nactive(cb) -&gt; cb(err, element)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/element\">/session/:sessionId/element/:id/element</a><br>\r\nSearch for an element on the page, starting from the identified element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nelement.element(using, value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n<p>\r\nelement.elementByClassName(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementByCssSelector(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementById(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementByName(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementByLinkText(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementByPartialLinkText(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementByTagName(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementByXPath(value, cb) -&gt; cb(err, element)<br>\r\nelement.elementByCss(value, cb) -&gt; cb(err, element)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/elements\">/session/:sessionId/element/:id/elements</a><br>\r\nSearch for multiple elements on the page, starting from the identified element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nelement.elements(using, value, cb) -&gt; cb(err, elements)<br>\r\n</p>\r\n<p>\r\nelement.elementsByClassName(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsByCssSelector(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsById(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsByName(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsByLinkText(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsByPartialLinkText(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsByTagName(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsByXPath(value, cb) -&gt; cb(err, elements)<br>\r\nelement.elementsByCss(value, cb) -&gt; cb(err, elements)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/click\">/session/:sessionId/element/:id/click</a><br>\r\nClick on an element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nclickElement(element, cb) -&gt; cb(err)<br>\r\n</p>\r\n<p>\r\nelement.click(cb) -&gt; cb(err)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/submit\">/session/:sessionId/element/:id/submit</a><br>\r\nSubmit a FORM element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsubmit(element, cb) -&gt; cb(err)<br>\r\nSubmit a `FORM` element.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/text\">/session/:sessionId/element/:id/text</a><br>\r\nReturns the visible text for the element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\ntext(element, cb) -&gt; cb(err, text)<br>\r\nelement: specific element, 'body', or undefined<br>\r\n</p>\r\n<p>\r\nelement.text(cb) -&gt; cb(err, text)<br>\r\n</p>\r\n<p>\r\n## Check if text is present<br>\r\ntextPresent(searchText, element, cb) -&gt; cb(err, boolean)<br>\r\nelement: specific element, 'body', or undefined<br>\r\n</p>\r\n<p>\r\nelement.textPresent(searchText, cb) -&gt; cb(err, boolean)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/value\">/session/:sessionId/element/:id/value</a><br>\r\nSend a sequence of key strokes to an element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\ntype(element, keys, cb) -&gt; cb(err)<br>\r\nType keys (all keys are up at the end of command).<br>\r\nspecial key map: wd.SPECIAL_KEYS (see lib/special-keys.js)<br>\r\n</p>\r\n<p>\r\nelement.type(keys, cb) -&gt; cb(err)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/keys\">/session/:sessionId/keys</a><br>\r\nSend a sequence of key strokes to the active element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nkeys(keys, cb) -&gt; cb(err)<br>\r\nPress keys (keys may still be down at the end of command).<br>\r\nspecial key map: wd.SPECIAL_KEYS (see lib/special-keys.js)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/name\">/session/:sessionId/element/:id/name</a><br>\r\nQuery for an element's tag name.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\ngetTagName(element, cb) -&gt; cb(err, name)<br>\r\n</p>\r\n<p>\r\nelement.getTagName(cb) -&gt; cb(err, name)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/element/:id/clear\">/session/:sessionId/element/:id/clear</a><br>\r\nClear a TEXTAREA or text INPUT element's value.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nclear(element, cb) -&gt; cb(err)<br>\r\n</p>\r\n<p>\r\nelement.clear(cb) -&gt; cb(err)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/selected\">/session/:sessionId/element/:id/selected</a><br>\r\nDetermine if an OPTION element, or an INPUT element of type checkbox or radiobutton is currently selected.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nisSelected(element, cb) -&gt; cb(err, selected)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/attribute/:name\">/session/:sessionId/element/:id/attribute/:name</a><br>\r\nGet the value of an element's attribute.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\ngetAttribute(element, attrName, cb) -&gt; cb(err, value)<br>\r\n</p>\r\n<p>\r\nelement.getAttribute(attrName, cb) -&gt; cb(err, value)<br>\r\n</p>\r\n<p>\r\nGet element value (in value attribute):<br>\r\ngetValue(element, cb) -&gt; cb(err, value)<br>\r\n</p>\r\n<p>\r\nelement.getValue(cb) -&gt; cb(err, value)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/displayed\">/session/:sessionId/element/:id/displayed</a><br>\r\nDetermine if an element is currently displayed.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nisDisplayed(element, cb) -&gt; cb(err, displayed)<br>\r\n</p>\r\n<p>\r\nelement.isDisplayed(cb) -&gt; cb(err, displayed)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/location\">/session/:sessionId/element/:id/location</a><br>\r\nDetermine an element's location on the page.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\ngetLocation(element, cb) -&gt; cb(err, location)<br>\r\n</p>\r\n<p>\r\nelement.getLocation(cb) -&gt; cb(err, location)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/size\">/session/:sessionId/element/:id/size</a><br>\r\nDetermine an element's size in pixels.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\ngetSize(element, cb) -&gt; cb(err, size)<br>\r\n</p>\r\n<p>\r\nelement.getSize(cb) -&gt; cb(err, size)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/element/:id/css/:propertyName\">/session/:sessionId/element/:id/css/:propertyName</a><br>\r\nQuery the value of an element's computed CSS property.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\ngetComputedCss(element, cssProperty , cb) -&gt; cb(err, value)<br>\r\n</p>\r\n<p>\r\nelement.getComputedCss(cssProperty , cb) -&gt; cb(err, value)<br>\r\n</p>\r\n<p>\r\nelement.getComputedCss(cssProperty , cb) -&gt; cb(err, value)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/orientation\">/session/:sessionId/orientation</a><br>\r\nGet the current browser orientation.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ngetOrientation(cb) -&gt; cb(err, orientation)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/orientation\">/session/:sessionId/orientation</a><br>\r\nSet the browser orientation.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nsetOrientation(cb) -&gt; cb(err, orientation)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nGET <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/session/:sessionId/alert_text\">/session/:sessionId/alert_text</a><br>\r\nGets the text of the currently displayed JavaScript alert(), confirm(), or prompt() dialog.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nalertText(cb) -&gt; cb(err, text)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/alert_text\">/session/:sessionId/alert_text</a><br>\r\nSends keystrokes to a JavaScript prompt() dialog.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nalertKeys(keys, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/accept_alert\">/session/:sessionId/accept_alert</a><br>\r\nAccepts the currently displayed alert dialog.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nacceptAlert(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/dismiss_alert\">/session/:sessionId/dismiss_alert</a><br>\r\nDismisses the currently displayed alert dialog.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ndismissAlert(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/moveto\">/session/:sessionId/moveto</a><br>\r\nMove the mouse by an offset of the specificed element.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nmoveTo(element, xoffset, yoffset, cb) -&gt; cb(err)<br>\r\nMove to element, xoffset and y offset are optional.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/click\">/session/:sessionId/click</a><br>\r\nClick any mouse button (at the coordinates set by the last moveto command).\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nclick(button, cb) -&gt; cb(err)<br>\r\nClick on current element.<br>\r\nButtons: {left: 0, middle: 1 , right: 2}<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/buttondown\">/session/:sessionId/buttondown</a><br>\r\nClick and hold the left mouse button (at the coordinates set by the last moveto command).\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nbuttonDown(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/buttonup\">/session/:sessionId/buttonup</a><br>\r\nReleases the mouse button previously held (where the mouse is currently at).\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nbuttonUp(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/doubleclick\">/session/:sessionId/doubleclick</a><br>\r\nDouble-clicks at the current mouse coordinates (set by moveto).\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\ndoubleclick(cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nPOST <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol#POST_/session/:sessionId/touch/flick\">/session/:sessionId/touch/flick</a><br>\r\nFlick on the touch screen using finger motion events.\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\n<p>\r\nflick(xSpeed, ySpeed, swipe, cb) -&gt; cb(err)<br>\r\nFlicks, starting anywhere on the screen.<br>\r\nflick(element, xoffset, yoffset, speed, cb) -&gt; cb(err)<br>\r\nFlicks, starting at element center.<br>\r\n</p>\r\n<p>\r\nelement.flick(xoffset, yoffset, speed, cb) -&gt; cb(err)<br>\r\n</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nOpens a new window (using Javascript window.open):<br>\r\nnewWindow(url, name, cb) -&gt; cb(err)<br>\r\nnewWindow(url, cb) -&gt; cb(err)<br>\r\nname: optional window name<br>\r\nWindow can later be accessed by name with the window method,<br>\r\nor by getting the last handle returned by the windowHandles method.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwindowName(cb) -&gt; cb(err, name)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwaitForElement(using, value, timeout, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwaitForVisible(using, value, timeout, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwaitForElementByClassName(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementByCssSelector(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementById(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementByName(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementByLinkText(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementByPartialLinkText(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementByTagName(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementByXPath(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForElementByCss(value, timeout, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nwaitForVisibleByClassName(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleByCssSelector(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleById(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleByName(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleByLinkText(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleByPartialLinkText(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleByTagName(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleByXPath(value, timeout, cb) -&gt; cb(err)<br>\r\nwaitForVisibleByCss(value, timeout, cb) -&gt; cb(err)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nisVisible(element , cb) -&gt; cb(err, boolean)<br>\r\nisVisible(queryType, querySelector, cb) -&gt; cb(err, boolean)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nRetrieves the pageIndex element (added for Appium):<br>\r\ngetPageIndex(element, cb) -&gt; cb(err, pageIndex)<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nWaits for JavaScript condition to be true (polling within wd client):<br>\r\nwaitForCondition(conditionExpr, timeout, pollFreq, cb) -&gt; cb(err, boolean)<br>\r\nwaitForCondition(conditionExpr, timeout, cb) -&gt; cb(err, boolean)<br>\r\nwaitForCondition(conditionExpr, cb) -&gt; cb(err, boolean)<br>\r\nconditionExpr: condition expression, should return a boolean<br>\r\ntimeout: timeout (optional, default: 1000)<br>\r\npollFreq: pooling frequency (optional, default: 100)<br>\r\nreturn true if condition satisfied, error otherwise.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nWaits for JavaScript condition to be true (async script polling within browser):<br>\r\nwaitForConditionInBrowser(conditionExpr, timeout, pollFreq, cb) -&gt; cb(err, boolean)<br>\r\nwaitForConditionInBrowser(conditionExpr, timeout, cb) -&gt; cb(err, boolean)<br>\r\nwaitForConditionInBrowser(conditionExpr, cb) -&gt; cb(err, boolean)<br>\r\nconditionExpr: condition expression, should return a boolean<br>\r\ntimeout: timeout (optional, default: 1000)<br>\r\npollFreq: pooling frequency (optional, default: 100)<br>\r\nreturn true if condition satisfied, error otherwise.<br>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nEXTRA\r\n</td>\r\n<td style=\"border: 1px solid #ccc; padding: 5px;\">\r\nisVisible(cb) -&gt; cb(err, boolean)<br>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n## JsonWireProtocol mapping\r\n\r\n[supported mapping](https://github.com/admc/wd/blob/master/doc/jsonwire-mapping.md)\r\n\r\n[full mapping](https://github.com/admc/wd/blob/master/doc/jsonwire-full-mapping.md)\r\n\r\n## More docs!\r\n<pre>\r\nWD is simply implementing the Selenium JsonWireProtocol, for more details see the official docs:\r\n - <a href=\"http://code.google.com/p/selenium/wiki/JsonWireProtocol\">http://code.google.com/p/selenium/wiki/JsonWireProtocol</a>\r\n</pre>\r\n\r\n## Run the tests!\r\n<pre>\r\n  - Run the selenium server with chromedriver:\r\n      java -jar selenium-server-standalone-2.21.0.jar -Dwebdriver.chrome.driver=&lt;PATH&gt;/chromedriver\r\n  - cd wd\r\n  - npm install .\r\n  - make test\r\n  - look at the results!\r\n</pre>\r\n\r\n## Run the tests on Sauce Labs cloud!\r\n<pre>\r\n  - cd wd\r\n  - npm install .\r\n  - make test_saucelabs\r\n</pre>\r\n\r\n## Adding new method / Contributing\r\n\r\nIf the method you want to use is not yet implemented, that should be\r\neasy to add it to `lib/webdriver.js`. You can use the `doubleclick`\r\nmethod as a template for methods not returning data, and `getOrientation`\r\nfor methods which returns data. No need to modify README as the doc\r\ngeneration is automated. Other contributions are welcomed.\r\n\r\n## Doc\r\n\r\nThe JsonWire mappings in the README and mapping files are generated from code\r\ncomments using [dox](https://github.com/visionmedia/dox).\r\n\r\nTo update the mappings run the following commands:\r\n\r\n<pre>\r\n  - make mapping > doc/jsonwire-mapping.md\r\n  - make full_mapping > doc/jsonwire-full-mapping.md\r\n</pre>\r\n\r\nThe content of doc/jsonwire-mapping.md should then be manually integrated into\r\nREADME.md.\r\n\r\n## Test Coverage\r\n\r\n[test coverage](http://admc.io/wd/coverage.html)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}